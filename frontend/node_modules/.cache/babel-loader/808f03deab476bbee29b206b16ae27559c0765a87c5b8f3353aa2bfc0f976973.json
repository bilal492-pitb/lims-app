{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BILAL\\\\Videos\\\\lims-app (grok)\\\\frontend\\\\src\\\\components\\\\SampleModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './SampleModal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SampleModal = ({\n  onClose,\n  onAddSample\n}) => {\n  _s();\n  const [sampleType, setSampleType] = useState('');\n  const [selectedTests, setSelectedTests] = useState([]);\n  const tests = [{\n    testName: 'Moisture Content',\n    price: 500\n  }, {\n    testName: 'Protein Analysis',\n    price: 1000\n  }, {\n    testName: 'Fat Content',\n    price: 800\n  }\n  // Add more tests as needed\n  ];\n  const handleTestChange = test => {\n    setSelectedTests(prev => {\n      if (prev.includes(test)) {\n        return prev.filter(t => t !== test);\n      }\n      return [...prev, test];\n    });\n  };\n  const totalPrice = selectedTests.reduce((sum, test) => sum + test.price, 0);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!sampleType || selectedTests.length === 0) {\n      alert('Please select sample type and at least one test.');\n      return;\n    }\n    onAddSample({\n      sampleType,\n      tests: selectedTests,\n      totalPrice\n    });\n    onClose();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add Sample\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Sample Type *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: sampleType,\n            onChange: e => setSampleType(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Select Tests\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), tests.map((test, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: selectedTests.includes(test),\n              onChange: () => handleTestChange(test)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [test.testName, \" (Rs. \", test.price, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Price: Rs. \", totalPrice]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Add Sample\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: onClose,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(SampleModal, \"1lwcVseBQ+l76jpBTH2WfqNE2ek=\");\n_c = SampleModal;\nexport default SampleModal;\nvar _c;\n$RefreshReg$(_c, \"SampleModal\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SampleModal","onClose","onAddSample","_s","sampleType","setSampleType","selectedTests","setSelectedTests","tests","testName","price","handleTestChange","test","prev","includes","filter","t","totalPrice","reduce","sum","handleSubmit","e","preventDefault","length","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","map","index","checked","onClick","_c","$RefreshReg$"],"sources":["C:/Users/BILAL/Videos/lims-app (grok)/frontend/src/components/SampleModal.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './SampleModal.css';\r\n\r\nconst SampleModal = ({ onClose, onAddSample }) => {\r\n  const [sampleType, setSampleType] = useState('');\r\n  const [selectedTests, setSelectedTests] = useState([]);\r\n  const tests = [\r\n    { testName: 'Moisture Content', price: 500 },\r\n    { testName: 'Protein Analysis', price: 1000 },\r\n    { testName: 'Fat Content', price: 800 },\r\n    // Add more tests as needed\r\n  ];\r\n\r\n  const handleTestChange = (test) => {\r\n    setSelectedTests(prev => {\r\n      if (prev.includes(test)) {\r\n        return prev.filter(t => t !== test);\r\n      }\r\n      return [...prev, test];\r\n    });\r\n  };\r\n\r\n  const totalPrice = selectedTests.reduce((sum, test) => sum + test.price, 0);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!sampleType || selectedTests.length === 0) {\r\n      alert('Please select sample type and at least one test.');\r\n      return;\r\n    }\r\n    onAddSample({ sampleType, tests: selectedTests, totalPrice });\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"modal-content\">\r\n        <h3>Add Sample</h3>\r\n        <form onSubmit={handleSubmit}>\r\n          <div>\r\n            <label>Sample Type *</label>\r\n            <input\r\n              type=\"text\"\r\n              value={sampleType}\r\n              onChange={(e) => setSampleType(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div>\r\n            <h4>Select Tests</h4>\r\n            {tests.map((test, index) => (\r\n              <div key={index}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={selectedTests.includes(test)}\r\n                  onChange={() => handleTestChange(test)}\r\n                />\r\n                <label>{test.testName} (Rs. {test.price})</label>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <p>Total Price: Rs. {totalPrice}</p>\r\n          <div className=\"modal-actions\">\r\n            <button type=\"submit\">Add Sample</button>\r\n            <button type=\"button\" onClick={onClose}>Cancel</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SampleModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}